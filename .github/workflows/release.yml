on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  once:
    name: Create single release for all builds
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Create Release
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        arch: [amd64, arm64, arm64-android, arm7]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install Android SDK
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y lib32stdc++6 lib32z1
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip -d $HOME/cmdline-tools
          mkdir -p $ANDROID_HOME/cmdline-tools
          mv $HOME/cmdline-tools $ANDROID_HOME/cmdline-tools/tools
          yes | $ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager "platform-tools" "ndk-bundle" "platforms;android-21"

      - name: Set up Android NDK environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
          export PATH=$ANDROID_NDK_HOME:$PATH

      - name: Build and package for Linux and Android
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [[ "${{ matrix.arch }}" == "amd64" ]]; then
            export GOARCH=amd64
            export GOOS=linux
            export CGO_ENABLED=0
            go build -v -o audioloader server.go
            tar -czf audioloader-linux-amd64-${{ github.ref_name }}.tar.gz audioloader static
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            export GOARCH=arm64
            export GOOS=linux
            export CGO_ENABLED=0
            go build -v -o audioloader server.go
            tar -czf audioloader-linux-arm64-${{ github.ref_name }}.tar.gz audioloader static
          elif [[ "${{ matrix.arch }}" == "arm64-android" ]]; then
            export GOARCH=arm64 
            export GOOS=android
            export CGO_ENABLED=1
            export CC=aarch64-linux-android21-clang
            go build -v -o audioloader server.go
            tar -czf audioloader-linux-arm64-android-${{ github.ref_name }}.tar.gz audioloader static
          elif [[ "${{ matrix.arch }}" == "arm7" ]]; then
            export GOARCH=arm
            export GOOS=linux
            export GOARM=7
            export CGO_ENABLED=0
            go build -v -o audioloader server.go
            tar -czf audioloader-linux-arm7-${{ github.ref_name }}.tar.gz audioloader static
          fi

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: |
          if [ "${{ matrix.arch }}" == "amd64" ]; then
            set CGO_ENABLED=0
            set GOARCH=amd64
            set GOOS=windows
            go build -v -o audioloader.exe server.go
            powershell Compress-Archive -Path audioloader.exe,static -DestinationPath audioloader-windows-amd64-${{ github.ref_name }}.zip
          fi

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: |
            ./audioloader-linux-amd64-${{ github.ref_name }}.tar.gz
            ./audioloader-linux-arm64-${{ github.ref_name }}.tar.gz
            ./audioloader-linux-arm64-android-${{ github.ref_name }}.tar.gz
            ./audioloader-linux-arm7-${{ github.ref_name }}.tar.gz
            ./audioloader-windows-amd64-${{ github.ref_name }}.tar.gz
          asset_name: |
            audioloader-linux-amd64-${{ github.ref_name }}.tar.gz
            audioloader-linux-arm64-${{ github.ref_name }}.tar.gz
            audioloader-linux-arm64-android-${{ github.ref_name }}.tar.gz
            audioloader-linux-arm7-${{ github.ref_name }}.tar.gz
            audioloader-windows-amd64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-tgz
