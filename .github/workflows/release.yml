on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  once:
    name: Create single release for all builds
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Create Release
    needs: once
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [amd64, arm64, arm7]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build for Linux
        run: |
          if [[ "${{ matrix.arch }}" == "amd64" ]]; then
            GOARCH=amd64
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            GOARCH=arm64
          elif [[ "${{ matrix.arch }}" == "arm7" ]]; then
            GOARCH=arm
          fi
          CGO_ENABLED=0 GOARCH=$GOARCH go build -v -o audioloader server.go

      - if: matrix.arch == 'amd64'
        name: create-archive for linux amd64
        run: tar -czf audioloader-linux-amd64-${{ github.ref_name }}.tar.gz audioloader static

      - if: matrix.arch == 'arm64'
        name: create-archive for linux arm64
        run: tar -czf audioloader-linux-arm64-${{ github.ref_name }}.tar.gz audioloader static

      - if: matrix.arch == 'arm7'
        name: create-archive for linux arm7
        run: tar -czf audioloader-linux-arm7-${{ github.ref_name }}.tar.gz audioloader static

      - if: matrix.arch == 'amd64'
        name: Upload Release Asset Linux amd64
        id: upload-release-asset-linux-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./audioloader-linux-amd64-${{ github.ref_name }}.tar.gz
          asset_name: audioloader-linux-amd64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-tgz

      - if: matrix.arch == 'arm64'
        name: Upload Release Asset Linux arm64
        id: upload-release-asset-linux-arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./audioloader-linux-arm64-${{ github.ref_name }}.tar.gz
          asset_name: audioloader-linux-arm64-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-tgz

      - if: matrix.arch == 'arm7'
        name: Upload Release Asset Linux arm7
        id: upload-release-asset-linux-arm7
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.once.outputs.upload_url }}
          asset_path: ./audioloader-linux-arm7-${{ github.ref_name }}.tar.gz
          asset_name: audioloader-linux-arm7-${{ github.ref_name }}.tar.gz
          asset_content_type: application/x-tgz
